void build(int ind,int left, int right)
{
    if(left==right)
    {
        st[ind]=arr[left];
    }
    else
    {
        int mid=(left+right)/2;
        build(ind*2, left,mid);
        build(ind*2+1,mid+1, right);
        
        st[ind]=min(st[ind*2],st[ind*2+1]);
    }
}

int query(int ind, int l, int r, int left, int right)
{
    if(left>right)return INT_MAX;
    
    if(l==left && r==right)
    {
        return st[ind];
    }
    int mid=(left+right)/2;
    return min(query(ind*2, l, min(r,mid), left, mid),query(ind*2+1, max(l,mid+1),r, mid+1, right));
}

void update(int ind, int point, int value, int left, int right)
{
    if(left==right && left==point)
    {
        st[ind]=value;
        arr[left]=value;
    }
    
    int mid=(left+right)/2;
    
    if(point<=mid)
    update(ind*2, point, value, left, mid);
    else
    update(ind*2+1, point, value, mid+1, right);
    
    st[ind]=min(st[ind*2],st[ind*2+1]);
}
